apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-demo
  labels:
    app.kubernetes.io/name: demo
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: demo
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: demo
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        k3d.io/expose: "true"  # Специальная аннотация для k3d
        k3d.io/port: "49340:{{ .Values.service.targetPort | default 8080 }}/tcp"  # Проброс портов
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: demo-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort | default 8080 }}
              protocol: TCP
          env:
            - name: KUBERNETES_SERVICE_HOST
              value: "host.docker.internal"  # Специфично для k3d
            - name: KUBERNETES_SERVICE_PORT
              value: "49340"  # Ваш порт API
            - name: SERVER_PORT
              value: "{{ .Values.service.targetPort | default 8080 }}"
          resources:
            {{- toYaml .Values.resources | default (dict "limits" (dict "cpu" "500m" "memory" "512Mi") "requests" (dict "cpu" "100m" "memory" "128Mi")) | nindent 12 }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probe.path | default "/actuator/health" }}
              port: {{ .Values.service.targetPort | default 8080 }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: {{ .Values.probe.path | default "/actuator/health" }}
              port: {{ .Values.service.targetPort | default 8080 }}
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
      volumes:
        - name: tmp-volume
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}